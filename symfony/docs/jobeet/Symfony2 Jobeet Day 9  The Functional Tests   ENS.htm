<!DOCTYPE html>
<!-- saved from url=(0072)http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/ -->
<html lang="en-US" xmlns:og="http://opengraphprotocol.org/schema/" xmlns:fb="http://www.facebook.com/2008/fbml"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script type="text/javascript" async="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/plusone.js" gapi_processed="true"></script>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<title>Symfony2 Jobeet Day 9: The Functional Tests | ENS</title>
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="stylesheet" type="text/css" media="all" href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/style.css">
<link rel="pingback" href="http://www.ens.ro/xmlrpc.php">
<!--[if lt IE 9]>
<script src="http://www.ens.ro/wp-content/themes/twentyeleven/js/html5.js" type="text/javascript"></script>
<![endif]-->

	<link rel="stylesheet" href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/dcssb.css" type="text/css" media="screen">
	<!--Facebook OpenGraph Slick Social Share Buttons -->
	<meta property="og:site_name" content="ENS">
		<meta property="og:title" content="Symfony2 Jobeet Day 9: The Functional Tests">
			<meta property="og:description" content="Functional tests are a great tool to test your application from end to end: from the request made by a browser to the response sent by the server. They test all the layers of an application: the routi">
		
		<meta property="og:url" content="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/">
		
		<meta property="og:image" content="">
		<meta property="fb:admins" content="533936499">
		<meta property="fb:app_id" content="">
		<meta property="og:type" content="article"><!--End Facebook OpenGraph Settings -->
		<link rel="alternate" type="application/rss+xml" title="ENS » Feed" href="http://www.ens.ro/feed/">
<link rel="alternate" type="application/rss+xml" title="ENS » Comments Feed" href="http://www.ens.ro/comments/feed/">

			<script src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/cb=gapi.loaded_1" async=""></script><script src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/cb=gapi.loaded_0" async=""></script><script type="text/javascript" async="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/plusone.js" gapi_processed="true"></script><script type="text/javascript" async="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/ga.js"></script><script type="text/javascript">//<![CDATA[
			// Google Analytics for WordPress by Yoast v4.2.8 | http://yoast.com/wordpress/google-analytics/
			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-29990339-1']);
							_gaq.push(['_trackPageview']);
			(function () {
				var ga = document.createElement('script');
				ga.type = 'text/javascript';
				ga.async = true;
				ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
				var s = document.getElementsByTagName('script')[0];
				s.parentNode.insertBefore(ga, s);
			})();
			//]]></script>
			<link rel="alternate" type="application/rss+xml" title="ENS » Symfony2 Jobeet Day 9: The Functional Tests Comments Feed" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/feed/">
<link rel="stylesheet" id="contact-form-7-css" href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/styles.css" type="text/css" media="all">
<link rel="stylesheet" id="NextGEN-css" href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/nggallery.css" type="text/css" media="screen">
<link rel="stylesheet" id="shutter-css" href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/shutter-reloaded.css" type="text/css" media="screen">
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/comment-reply.min.js"></script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/jquery.js"></script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/ga.social_tracking.js"></script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/jquery.social.slick.1.0.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var shutterSettings = {"msgLoading":"L O A D I N G","msgClose":"Click to Close","imageCount":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/shutter-reloaded.js"></script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/jquery.cycle.all.min.js"></script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/ngg.slideshow.min.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.ens.ro/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.ens.ro/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="Symfony2 Jobeet Day 8: The Unit Tests" href="http://www.ens.ro/2012/04/18/symfony2-jobeet-day-8-the-unit-tests/">
<link rel="next" title="Setting Up Symfony 1.4 and Uploadify Session Id" href="http://www.ens.ro/2012/04/26/setting-up-symfony-1-4-and-uploadify-session-id/">
<meta name="generator" content="WordPress 3.5">
<link rel="canonical" href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/Symfony2 Jobeet Day 9  The Functional Tests   ENS.htm">
<link rel="shortlink" href="http://www.ens.ro/?p=1172">
<!-- <meta name="NextGEN" version="1.9.10" /> -->
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #f1f1f1; background-image: url('http://www.ens.ro/wp-content/uploads/2012/08/bgbody1.gif'); background-repeat: repeat; background-position: top left; background-attachment: fixed; }
</style>
<link rel="stylesheet" type="text/css" href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/shCore.css"><link rel="stylesheet" type="text/css" href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/shThemeDefault.css"><meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3">
<style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}
.fb_invisible{display:none}
.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}
.fb_reset > div{overflow:hidden}
.fb_link img{border:none}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}
.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}
.fb_dialog_content{background:#fff;color:#333}
.fb_dialog_close_icon{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif);cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px;top:8px\9;right:7px\9}
.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}
.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}
.fb_dialog_close_icon:hover{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_close_icon:active{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_loader{background-color:#f2f2f2;border:1px solid #606060;font-size:24px;padding:20px}
.fb_dialog_top_left,
.fb_dialog_top_right,
.fb_dialog_bottom_left,
.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}
.fb_dialog_top_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}
.fb_dialog_top_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}
.fb_dialog_bottom_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}
.fb_dialog_bottom_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}
.fb_dialog_vert_left,
.fb_dialog_vert_right,
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}
.fb_dialog_vert_left,
.fb_dialog_vert_right{width:10px;height:100%}
.fb_dialog_vert_left{margin-left:-10px}
.fb_dialog_vert_right{right:0;margin-right:-10px}
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{width:100%;height:10px}
.fb_dialog_horiz_top{margin-top:-10px}
.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}
.fb_dialog_iframe{line-height:0}
.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #3b5998;color:#fff;font-size:14px;font-weight:bold;margin:0}
.fb_dialog_content .dialog_title > span{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yd/r/Cou7n-nqK52.gif)
no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}
body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}
.fb_dialog.fb_dialog_mobile.loading{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ya/r/3rhSv5V8j3o.gif)
white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}
.fb_dialog.fb_dialog_mobile.loading.centered{max-height:590px;min-height:590px;max-width:500px;min-width:500px}
#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;left:0;top:0;width:100%;min-height:100%;z-index:10000}
#fb-root #fb_dialog_ipad_overlay.hidden{display:none}
.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}
.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}
.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%
}
.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6),
color-stop(0.5, #355492), to(#2A4887));border:1px solid #29447e;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset,
rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}
.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}
.fb_dialog_content .dialog_content{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}
.fb_dialog_content .dialog_footer{background:#f2f2f2;border:1px solid #555;border-top-color:#ccc;height:40px}
#fb_dialog_loader_close{float:left}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}
.fb_iframe_widget{display:inline-block;position:relative}
.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}
.fb_iframe_widget iframe{position:absolute}
.fb_iframe_widget_lift{z-index:1}
.fb_hide_iframes iframe{position:relative;left:-10000px}
.fb_iframe_widget_loader{position:relative;display:inline-block}
.fb_iframe_widget_fluid{display:inline}
.fb_iframe_widget_fluid span{width:100%}
.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}
.fb_iframe_widget_loader .FB_Loader{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}
.fb_connect_bar_container div,
.fb_connect_bar_container span,
.fb_connect_bar_container a,
.fb_connect_bar_container img,
.fb_connect_bar_container strong{background:none;border-spacing:0;border:0;direction:ltr;font-style:normal;font-variant:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal;vertical-align:baseline}
.fb_connect_bar_container{position:fixed;left:0 !important;right:0 !important;height:42px !important;padding:0 25px !important;margin:0 !important;vertical-align:middle !important;border-bottom:1px solid #333 !important;background:#3b5998 !important;z-index:99999999 !important;overflow:hidden !important}
.fb_connect_bar_container_ie6{position:absolute;top:expression(document.compatMode=="CSS1Compat"? document.documentElement.scrollTop+"px":body.scrollTop+"px")}
.fb_connect_bar{position:relative;margin:auto;height:100%;width:100%;padding:6px 0 0 0 !important;background:none;color:#fff !important;font-family:"lucida grande", tahoma, verdana, arial, sans-serif !important;font-size:13px !important;font-style:normal !important;font-variant:normal !important;font-weight:normal !important;letter-spacing:normal !important;line-height:1 !important;text-decoration:none !important;text-indent:0 !important;text-shadow:none !important;text-transform:none !important;white-space:normal !important;word-spacing:normal !important}
.fb_connect_bar a:hover{color:#fff}
.fb_connect_bar .fb_profile img{height:30px;width:30px;vertical-align:middle;margin:0 6px 5px 0}
.fb_connect_bar div a,
.fb_connect_bar span,
.fb_connect_bar span a{color:#bac6da;font-size:11px;text-decoration:none}
.fb_connect_bar .fb_buttons{float:right;margin-top:7px}
.fb_edge_widget_with_comment{position:relative;*z-index:1000}
.fb_edge_widget_with_comment span.fb_edge_comment_widget{position:absolute}
.fb_edge_widget_with_comment span.fb_send_button_form_widget{z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget .FB_Loader{left:0;top:1px;margin-top:6px;margin-left:0;background-position:50% 50%;background-color:#fff;height:150px;width:394px;border:1px #666 solid;border-bottom:2px solid #283e6c;z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.dark .FB_Loader{background-color:#000;border-bottom:2px solid #ccc}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.siderender
.FB_Loader{margin-top:0}
.fbpluginrecommendationsbarleft,
.fbpluginrecommendationsbarright{position:fixed !important;bottom:0;z-index:999}
.fbpluginrecommendationsbarleft{left:10px}
.fbpluginrecommendationsbarright{right:10px}</style></head>

<body class="single single-post postid-1172 single-format-standard custom-background single-author singular two-column right-sidebar" data-twttr-rendered="true">
<div id="page" class="hfeed">
	<header id="branding" role="banner">
			<hgroup>
				<h1 id="site-title"><span><a href="http://www.ens.ro/" title="ENS" rel="home">ENS</a></span></h1>
				<h2 id="site-description">Entertainment, News, Software</h2>
			</hgroup>

						<a href="http://www.ens.ro/">
									<img src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/cropped-wallpaper-15057031.jpg" width="1000" height="288" alt="">
							</a>
			
								<form method="get" id="searchform" action="http://www.ens.ro/">
		<label for="s" class="assistive-text">Search</label>
		<input type="text" class="field" name="s" id="s" placeholder="Search">
		<input type="submit" class="submit" name="submit" id="searchsubmit" value="Search">
	</form>
			
			<nav id="access" role="navigation">
				<h3 class="assistive-text">Main menu</h3>
								<div class="skip-link"><a class="assistive-text" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#content" title="Skip to primary content">Skip to primary content</a></div>
				<div class="skip-link"><a class="assistive-text" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#secondary" title="Skip to secondary content">Skip to secondary content</a></div>
								<div class="menu-my-menu-container"><ul id="menu-my-menu" class="menu"><li id="menu-item-161" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-161"><a href="http://www.ens.ro/">Home</a></li>
<li id="menu-item-160" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-160"><a href="http://www.ens.ro/category/web-development/">Web Development</a>
<ul class="sub-menu">
	<li id="menu-item-822" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-822"><a title="The Jobeet Tutorial with Symfony2" href="http://www.ens.ro/tag/symfony2-jobeet/">Symfony2 Jobeet</a></li>
	<li id="menu-item-2050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2050"><a title="Symfony2 Tutorials" href="http://www.ens.ro/tag/symfony2/">Symfony2</a></li>
	<li id="menu-item-2055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2055"><a title="Symfony 1.4 Tutorials" href="http://www.ens.ro/tag/symfony-1-4/">Symfony 1.4</a></li>
	<li id="menu-item-2049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2049"><a title="Zend Framework Tutorials" href="http://www.ens.ro/tag/zend/">Zend</a></li>
	<li id="menu-item-2063" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2063"><a title="PHP Tutorials" href="http://www.ens.ro/tag/php-2/">PHP</a></li>
	<li id="menu-item-2064" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2064"><a title="MySQL Tutorials" href="http://www.ens.ro/tag/mysql/">MySQL</a></li>
</ul>
</li>
<li id="menu-item-2073" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2073"><a title="Entertainment" href="http://www.ens.ro/tag/entertainment/">Entertainment</a></li>
<li id="menu-item-159" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-159"><a href="http://www.ens.ro/about/">About ENS</a></li>
<li id="menu-item-1267" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1267"><a href="http://www.ens.ro/contact/">Contact</a></li>
</ul></div>			</nav><!-- #access -->
	</header><!-- #branding -->


	<div id="main">

		<div id="primary">
			<div id="content" role="main">

				
					<nav id="nav-single">
						<h3 class="assistive-text">Post navigation</h3>
						<span class="nav-previous"><a href="http://www.ens.ro/2012/04/18/symfony2-jobeet-day-8-the-unit-tests/" rel="prev"><span class="meta-nav">←</span> Previous</a></span>
						<span class="nav-next"><a href="http://www.ens.ro/2012/04/26/setting-up-symfony-1-4-and-uploadify-session-id/" rel="next">Next <span class="meta-nav">→</span></a></span>
					</nav><!-- #nav-single -->

					
<article id="post-1172" class="post-1172 post type-post status-publish format-standard hentry category-english category-php category-web-development tag-symfony2-jobeet">
	<header class="entry-header">
		<h1 class="entry-title">Symfony2 Jobeet Day 9: The Functional Tests</h1>

				<div class="entry-meta">
			<span class="sep">Posted on </span><a href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/Symfony2 Jobeet Day 9  The Functional Tests   ENS.htm" title="12:55 pm" rel="bookmark"><time class="entry-date" datetime="2012-04-25T12:55:09+00:00">April 25, 2012</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://www.ens.ro/author/dragos/" title="View all posts by Dragos Holban" rel="author">Dragos Holban</a></span></span>		</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

	<div class="entry-content">
		<p>Functional tests are a great tool to test your application from end to end: from the request made by a browser to the response sent by the server. They test all the layers of an application: the routing, the model, the actions, and the templates. They are very similar to what you probably already do manually: each time you add or modify an action, you need to go to the browser and check that everything works as expected by clicking on links and checking elements on the rendered page. In other words, you run a scenario corresponding to the use case you have just implemented.<span id="more-1172"></span></p>
<p>As the process is manual, it is tedious and error prone. Each time you change something in your code, you must step through all the scenarios to ensure that you did not break something. That’s insane. Functional tests in symfony provide a way to easily describe scenarios. Each scenario can then be played automatically over and over again by simulating the experience a user has in a browser. Like unit tests, they give you the confidence to code in peace.</p>
<p>Functional tests have a very specific workflow:</p>
<ul>
<li>Make a request;</li>
<li>Test the response;</li>
<li>Click on a link or submit a form;</li>
<li>Test the response;</li>
<li>Rinse and repeat.</li>
</ul>
<h2>Our First Functional Test</h2>
<p>Functional tests are simple PHP files that typically live in the <code>Tests/Controller</code> directory of your bundle. If you want to test the pages handled by your <code>CategoryController</code> class, start by creating a new <code>CategoryControllerTest.php</code> file that extends a special <code>WebTestCase</code> class:</p>
<div><div id="highlighter_772933" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Teste/Controller/CategoryControllerTest.php</code></div><div class="line number2 index1 alt1"><code class="php keyword">namespace</code> <code class="php plain">Ens\JobeetBundle\Tests\Controller;</code></div><div class="line number3 index2 alt2"><code class="php keyword">use</code> <code class="php plain">Symfony\Bundle\FrameworkBundle\Test\WebTestCase;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="php keyword">class</code> <code class="php plain">CategoryControllerTest </code><code class="php keyword">extends</code> <code class="php plain">WebTestCase</code></div><div class="line number6 index5 alt1"><code class="php plain">{</code></div><div class="line number7 index6 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php keyword">public</code> <code class="php keyword">function</code> <code class="php plain">testShow()</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$client</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createClient();</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;request(</code><code class="php string">'GET'</code><code class="php plain">, </code><code class="php string">'/category/index'</code><code class="php plain">);</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php string">'Ens\JobeetBundle\Controller\CategoryController::showAction'</code><code class="php plain">, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'_controller'</code><code class="php plain">));</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(200 === </code><code class="php variable">$client</code><code class="php plain">-&gt;getResponse()-&gt;getStatusCode());</code></div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number15 index14 alt2"><code class="php plain">}</code></div></div></td></tr></tbody></table></div></div>
<h2>Running Functional Tests</h2>
<p>As for unit tests, launching functional tests can be done by executing the <code>phpunit</code> command:</p>
<div><div id="highlighter_956372" class="syntaxhighlighter nogutter  plain"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">phpunit -c app/ src/Ens/JobeetBundle/Tests/Controller/CategoryControllerTest</code></div></div></td></tr></tbody></table></div></div>
<p>This test will fail because the tested url, <code>/category/index</code>, is not a valid url in Jobeet:</p>
<div><div id="highlighter_889927" class="syntaxhighlighter  plain"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">PHPUnit 3.6.10 by Sebastian Bergmann.</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="plain plain">Configuration read from /home/dragos/work/jobeet/app/phpunit.xml.dist</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="plain plain">F</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="plain plain">Time: 2 seconds, Memory: 14.25Mb</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="plain plain">There was 1 failure:</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="plain plain">1) Ens\JobeetBundle\Tests\Controller\CategoryControllerTest::testShow</code></div><div class="line number12 index11 alt1"><code class="plain plain">Failed asserting that false is true.</code></div></div></td></tr></tbody></table></div></div>
<h2>Writing Functional Tests</h2>
<p>Writing functional tests is like playing a scenario in a browser. We already have written all the scenarios we need to test as part of the <a title="Symfony2 Jobeet Day 2: The Project" href="http://www.ens.ro/2012/03/24/symfony2-jobeet-day-2-the-project/" target="_blank">day 2 stories</a>.</p>
<p>First, let’s test the Jobeet homepage by editing the <code>JobControllerTest.php</code> test file. Replace the code with the following one:</p>
<h3>Expired jobs are not listed</h3>
<div><div id="highlighter_35842" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Test/Controller/JobControllerTest.php</code></div><div class="line number2 index1 alt1"><code class="php keyword">namespace</code> <code class="php plain">Ens\JobeetBundle\Tests\Controller;</code></div><div class="line number3 index2 alt2"><code class="php keyword">use</code> <code class="php plain">Symfony\Bundle\FrameworkBundle\Test\WebTestCase;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="php keyword">class</code> <code class="php plain">JobControllerTest </code><code class="php keyword">extends</code> <code class="php plain">WebTestCase</code></div><div class="line number6 index5 alt1"><code class="php plain">{</code></div><div class="line number7 index6 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php keyword">public</code> <code class="php keyword">function</code> <code class="php plain">testIndex()</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$client</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createClient();</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;request(</code><code class="php string">'GET'</code><code class="php plain">, </code><code class="php string">'/'</code><code class="php plain">);</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php string">'Ens\JobeetBundle\Controller\JobController::indexAction'</code><code class="php plain">, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'_controller'</code><code class="php plain">));</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.jobs td.position:contains("Expired")'</code><code class="php plain">)-&gt;</code><code class="php functions">count</code><code class="php plain">() == 0);</code></div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number15 index14 alt2"><code class="php plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>To verify the exclusion of expired jobs from the homepage, we check that the CSS selector <code>.jobs td.position:contains("Expired")</code> does not match anywhere in the response HTML content (remember that <a title="Symfony2 Jobeet Day 6: More with the Model" href="http://www.ens.ro/2012/04/08/symfony2-jobeet-day-6-more-with-the-model/#more-with-fixtures" target="_blank">in the fixtures</a>, the only expired job we have contains “Expired” in the position).</p>
<h3>Only n jobs are listed for a category</h3>
<p>Add the following code at the end of the test file. To get the custom parameter defined in <code>app/config/config.yml</code> in our functional test, we will use the kernel:</p>
<div><div id="highlighter_90073" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Test/Controller/JobControllerTest.php</code></div><div class="line number2 index1 alt1"><code class="php comments">// ...</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="php variable">$kernel</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createKernel();</code></div><div class="line number5 index4 alt2"><code class="php variable">$kernel</code><code class="php plain">-&gt;boot();</code></div><div class="line number6 index5 alt1"><code class="php variable">$max_jobs_on_homepage</code> <code class="php plain">= </code><code class="php variable">$kernel</code><code class="php plain">-&gt;getContainer()-&gt;getParameter(</code><code class="php string">'max_jobs_on_homepage'</code><code class="php plain">);</code></div><div class="line number7 index6 alt2"><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.category_programming tr'</code><code class="php plain">)-&gt;</code><code class="php functions">count</code><code class="php plain">() </code><code class="php comments">// ...</code></div></div></td></tr></tbody></table></div></div>
<p>For this test to work we will need to add the corresponding CSS class to each category in the <code>Job/index.html.twig</code> file (so we can select each category and count the jobs listed):</p>
<div><div id="highlighter_558697" class="syntaxhighlighter  xml"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml comments">&lt;!-- src/Ens/JobeetBundle/Resources/views/Job/index.html.twig --&gt;</code></div><div class="line number2 index1 alt1"><code class="xml comments">&lt;!-- ... --&gt;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">{% for category in categories %}&lt;/</code><code class="xml keyword">pre</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">div</code> <code class="xml color1">class</code><code class="xml plain">=</code><code class="xml string">"category_{{ category.slug }}"</code><code class="xml plain">&gt;</code><code class="xml comments">&lt;!-- ... --&gt;</code></div></div></td></tr></tbody></table></div></div>
<h3>A category has a link to the category page only if too many jobs</h3>
<div><div id="highlighter_754292" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Test/Controller/JobControllerTest.php</code></div><div class="line number2 index1 alt1"><code class="php comments">// ...</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.category_design .more_jobs'</code><code class="php plain">)-&gt;</code><code class="php functions">count</code><code class="php plain">() == 0);</code></div><div class="line number5 index4 alt2"><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.category_programming .more_jobs'</code><code class="php plain">)-&gt;</code><code class="php functions">count</code><code class="php plain">() == 1);</code></div><div class="line number6 index5 alt1"><code class="php comments">// ...</code></div></div></td></tr></tbody></table></div></div>
<p>In these tests, we check that there is no “more jobs” link for the design category (<code>.category_design .more_jobs</code> does not exist), and that there is a “more jobs” link for the programming category (<code>.category_programming .more_jobs</code> does exist).</p>
<h3>Jobs are sorted by date</h3>
<p>To test if jobs are actually sorted by date, we need to check that the first job listed on the homepage is the one we expect. This can be done by checking that the URL contains the expected primary key. As the primary key can change between runs, we need to get the Doctrine object from the database first.</p>
<div><div id="highlighter_435623" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Test/Controller/JobControllerTest.php</code></div><div class="line number2 index1 alt1"><code class="php comments">// ...</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="php variable">$kernel</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createKernel();</code></div><div class="line number5 index4 alt2"><code class="php variable">$kernel</code><code class="php plain">-&gt;boot();</code></div><div class="line number6 index5 alt1"><code class="php variable">$em</code> <code class="php plain">= </code><code class="php variable">$kernel</code><code class="php plain">-&gt;getContainer()-&gt;get(</code><code class="php string">'doctrine.orm.entity_manager'</code><code class="php plain">);</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="php variable">$query</code> <code class="php plain">= </code><code class="php variable">$em</code><code class="php plain">-&gt;createQuery(</code><code class="php string">'SELECT j from EnsJobeetBundle:Job j LEFT JOIN j.category c WHERE c.slug = :slug AND j.expires_at &gt; :date ORDER BY j.created_at DESC'</code><code class="php plain">);</code></div><div class="line number9 index8 alt2"><code class="php variable">$query</code><code class="php plain">-&gt;setParameter(</code><code class="php string">'slug'</code><code class="php plain">, </code><code class="php string">'programming'</code><code class="php plain">);</code></div><div class="line number10 index9 alt1"><code class="php variable">$query</code><code class="php plain">-&gt;setParameter(</code><code class="php string">'date'</code><code class="php plain">, </code><code class="php functions">date</code><code class="php plain">(</code><code class="php string">'Y-m-d H:i:s'</code><code class="php plain">, time()));</code></div><div class="line number11 index10 alt2"><code class="php variable">$query</code><code class="php plain">-&gt;setMaxResults(1);</code></div><div class="line number12 index11 alt1"><code class="php variable">$job</code> <code class="php plain">= </code><code class="php variable">$query</code><code class="php plain">-&gt;getSingleResult();</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.category_programming tr'</code><code class="php plain">)-&gt;first()-&gt;filter(sprintf(</code><code class="php string">'a[href*="/%d/"]'</code><code class="php plain">, </code><code class="php variable">$job</code><code class="php plain">-&gt;getId()))-&gt;</code><code class="php functions">count</code><code class="php plain">() == 1);</code></div><div class="line number15 index14 alt2"><code class="php comments">// ...</code></div></div></td></tr></tbody></table></div></div>
<p>Even if the test works as is, we need to refactor the code a bit, as getting the first job of the programming category can be reused elsewhere in our tests. We won’t move the code to the Model layer as the code is test specific. Instead, we will move the code to the&nbsp;<code>getMostRecentProgrammingJob</code> function in our test class:</p>
<div><div id="highlighter_778117" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Test/Controller/JobControllerTest.php</code></div><div class="line number2 index1 alt1"><code class="php comments">// ...</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="php keyword">public</code> <code class="php keyword">function</code> <code class="php plain">getMostRecentProgrammingJob()</code></div><div class="line number5 index4 alt2"><code class="php plain">{</code></div><div class="line number6 index5 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php variable">$kernel</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createKernel();</code></div><div class="line number7 index6 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php variable">$kernel</code><code class="php plain">-&gt;boot();</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php variable">$em</code> <code class="php plain">= </code><code class="php variable">$kernel</code><code class="php plain">-&gt;getContainer()-&gt;get(</code><code class="php string">'doctrine.orm.entity_manager'</code><code class="php plain">);</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php variable">$query</code> <code class="php plain">= </code><code class="php variable">$em</code><code class="php plain">-&gt;createQuery(</code><code class="php string">'SELECT j from EnsJobeetBundle:Job j LEFT JOIN j.category c WHERE c.slug = :slug AND j.expires_at &gt; :date ORDER BY j.created_at DESC'</code><code class="php plain">);</code></div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php variable">$query</code><code class="php plain">-&gt;setParameter(</code><code class="php string">'slug'</code><code class="php plain">, </code><code class="php string">'programming'</code><code class="php plain">);</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php variable">$query</code><code class="php plain">-&gt;setParameter(</code><code class="php string">'date'</code><code class="php plain">, </code><code class="php functions">date</code><code class="php plain">(</code><code class="php string">'Y-m-d H:i:s'</code><code class="php plain">, time()));</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php variable">$query</code><code class="php plain">-&gt;setMaxResults(1);</code></div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php keyword">return</code> <code class="php variable">$query</code><code class="php plain">-&gt;getSingleResult();</code></div><div class="line number15 index14 alt2"><code class="php plain">}</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="php comments">// ...</code></div></div></td></tr></tbody></table></div></div>
<p>You can now replace the previous test code by the following one:</p>
<div><div id="highlighter_878563" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Test/Controller/JobControllerTest.php</code></div><div class="line number2 index1 alt1"><code class="php comments">// ...</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.category_programming tr'</code><code class="php plain">)-&gt;first()-&gt;filter(sprintf(</code><code class="php string">'a[href*="/%d/"]'</code><code class="php plain">, </code><code class="php variable">$this</code><code class="php plain">-&gt;getMostRecentProgrammingJob()-&gt;getId()))-&gt;</code><code class="php functions">count</code><code class="php plain">() == 1);</code></div><div class="line number5 index4 alt2"><code class="php comments">// ...</code></div></div></td></tr></tbody></table></div></div>
<h3>Each job on the homepage is clickable</h3>
<p>To test the job link on the homepage, we simulate a click on the “Web Developer” text. As there are many of them on the page, we have explicitly to ask the browser to click on the first one.</p>
<p>Each request parameter is then tested to ensure that the routing has done its job correctly.</p>
<div><div id="highlighter_262363" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Test/Controller/JobControllerTest.php</code></div><div class="line number2 index1 alt1"><code class="php comments">// ...</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="php variable">$job</code> <code class="php plain">= </code><code class="php variable">$this</code><code class="php plain">-&gt;getMostRecentProgrammingJob();</code></div><div class="line number5 index4 alt2"><code class="php variable">$link</code> <code class="php plain">= </code><code class="php variable">$crawler</code><code class="php plain">-&gt;selectLink(</code><code class="php string">'Web Developer'</code><code class="php plain">)-&gt;first()-&gt;link();</code></div><div class="line number6 index5 alt1"><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;click(</code><code class="php variable">$link</code><code class="php plain">);</code></div><div class="line number7 index6 alt2"><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php string">'Ens\JobeetBundle\Controller\JobController::showAction'</code><code class="php plain">, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'_controller'</code><code class="php plain">));</code></div><div class="line number8 index7 alt1"><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php variable">$job</code><code class="php plain">-&gt;getCompanySlug(), </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'company'</code><code class="php plain">));</code></div><div class="line number9 index8 alt2"><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php variable">$job</code><code class="php plain">-&gt;getLocationSlug(), </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'location'</code><code class="php plain">));</code></div><div class="line number10 index9 alt1"><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php variable">$job</code><code class="php plain">-&gt;getPositionSlug(), </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'position'</code><code class="php plain">));</code></div><div class="line number11 index10 alt2"><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php variable">$job</code><code class="php plain">-&gt;getId(), </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'id'</code><code class="php plain">));</code></div><div class="line number12 index11 alt1"><code class="php comments">// ...</code></div></div></td></tr></tbody></table></div></div>
<h3>Learn by the Example</h3>
<p>In this section, you have all the code needed to test the job and category pages. Read the code carefully as you may learn some new neat tricks:</p>
<div><div id="highlighter_977024" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Test/Controller/JobControllerTest.php</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="php keyword">namespace</code> <code class="php plain">Ens\JobeetBundle\Tests\Controller;</code></div><div class="line number4 index3 alt1"><code class="php keyword">use</code> <code class="php plain">Symfony\Bundle\FrameworkBundle\Test\WebTestCase;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="php keyword">class</code> <code class="php plain">JobControllerTest </code><code class="php keyword">extends</code> <code class="php plain">WebTestCase</code></div><div class="line number7 index6 alt2"><code class="php plain">{</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php keyword">public</code> <code class="php keyword">function</code> <code class="php plain">getMostRecentProgrammingJob()</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number10 index9 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$kernel</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createKernel();</code></div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$kernel</code><code class="php plain">-&gt;boot();</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$em</code> <code class="php plain">= </code><code class="php variable">$kernel</code><code class="php plain">-&gt;getContainer()-&gt;get(</code><code class="php string">'doctrine.orm.entity_manager'</code><code class="php plain">);</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$query</code> <code class="php plain">= </code><code class="php variable">$em</code><code class="php plain">-&gt;createQuery(</code><code class="php string">'SELECT j from EnsJobeetBundle:Job j LEFT JOIN j.category c WHERE c.slug = :slug AND j.expires_at &gt; :date ORDER BY j.created_at DESC'</code><code class="php plain">);</code></div><div class="line number15 index14 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$query</code><code class="php plain">-&gt;setParameter(</code><code class="php string">'slug'</code><code class="php plain">, </code><code class="php string">'programming'</code><code class="php plain">);</code></div><div class="line number16 index15 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$query</code><code class="php plain">-&gt;setParameter(</code><code class="php string">'date'</code><code class="php plain">, </code><code class="php functions">date</code><code class="php plain">(</code><code class="php string">'Y-m-d H:i:s'</code><code class="php plain">, time()));</code></div><div class="line number17 index16 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$query</code><code class="php plain">-&gt;setMaxResults(1);</code></div><div class="line number18 index17 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">return</code> <code class="php variable">$query</code><code class="php plain">-&gt;getSingleResult();</code></div><div class="line number19 index18 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php keyword">public</code> <code class="php keyword">function</code> <code class="php plain">getExpiredJob()</code></div><div class="line number22 index21 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number23 index22 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$kernel</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createKernel();</code></div><div class="line number24 index23 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$kernel</code><code class="php plain">-&gt;boot();</code></div><div class="line number25 index24 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$em</code> <code class="php plain">= </code><code class="php variable">$kernel</code><code class="php plain">-&gt;getContainer()-&gt;get(</code><code class="php string">'doctrine.orm.entity_manager'</code><code class="php plain">);</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$query</code> <code class="php plain">= </code><code class="php variable">$em</code><code class="php plain">-&gt;createQuery(</code><code class="php string">'SELECT j from EnsJobeetBundle:Job j WHERE j.expires_at &lt; :date'</code><code class="php plain">);&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="php variable">$query</code><code class="php plain">-&gt;setParameter(</code><code class="php string">'date'</code><code class="php plain">, </code><code class="php functions">date</code><code class="php plain">(</code><code class="php string">'Y-m-d H:i:s'</code><code class="php plain">, time()));</code></div><div class="line number28 index27 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$query</code><code class="php plain">-&gt;setMaxResults(1);</code></div><div class="line number29 index28 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">return</code> <code class="php variable">$query</code><code class="php plain">-&gt;getSingleResult();</code></div><div class="line number30 index29 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php keyword">public</code> <code class="php keyword">function</code> <code class="php plain">testIndex()</code></div><div class="line number33 index32 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number34 index33 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// get the custom parameters from app config.yml</code></div><div class="line number35 index34 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$kernel</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createKernel();</code></div><div class="line number36 index35 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$kernel</code><code class="php plain">-&gt;boot();</code></div><div class="line number37 index36 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$max_jobs_on_homepage</code> <code class="php plain">= </code><code class="php variable">$kernel</code><code class="php plain">-&gt;getContainer()-&gt;getParameter(</code><code class="php string">'max_jobs_on_homepage'</code><code class="php plain">);</code></div><div class="line number38 index37 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$max_jobs_on_category</code> <code class="php plain">= </code><code class="php variable">$kernel</code><code class="php plain">-&gt;getContainer()-&gt;getParameter(</code><code class="php string">'max_jobs_on_category'</code><code class="php plain">);</code></div><div class="line number39 index38 alt2">&nbsp;</div><div class="line number40 index39 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$client</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createClient();</code></div><div class="line number41 index40 alt2">&nbsp;</div><div class="line number42 index41 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;request(</code><code class="php string">'GET'</code><code class="php plain">, </code><code class="php string">'/'</code><code class="php plain">);</code></div><div class="line number43 index42 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php string">'Ens\JobeetBundle\Controller\JobController::indexAction'</code><code class="php plain">, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'_controller'</code><code class="php plain">));</code></div><div class="line number44 index43 alt1">&nbsp;</div><div class="line number45 index44 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// expired jobs are not listed</code></div><div class="line number46 index45 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.jobs td.position:contains("Expired")'</code><code class="php plain">)-&gt;</code><code class="php functions">count</code><code class="php plain">() == 0);</code></div><div class="line number47 index46 alt2">&nbsp;</div><div class="line number48 index47 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// only $max_jobs_on_homepage jobs are listed for a category</code></div><div class="line number49 index48 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.category_programming tr'</code><code class="php plain">)-&gt;</code><code class="php functions">count</code><code class="php plain">() assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.category_design .more_jobs'</code><code class="php plain">)-&gt;</code><code class="php functions">count</code><code class="php plain">() == 0);</code></div><div class="line number50 index49 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.category_programming .more_jobs'</code><code class="php plain">)-&gt;</code><code class="php functions">count</code><code class="php plain">() == 1);</code></div><div class="line number51 index50 alt2">&nbsp;</div><div class="line number52 index51 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// jobs are sorted by date</code></div><div class="line number53 index52 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.category_programming tr'</code><code class="php plain">)-&gt;first()-&gt;filter(sprintf(</code><code class="php string">'a[href*="/%d/"]'</code><code class="php plain">, </code><code class="php variable">$this</code><code class="php plain">-&gt;getMostRecentProgrammingJob()-&gt;getId()))-&gt;</code><code class="php functions">count</code><code class="php plain">() == 1);</code></div><div class="line number54 index53 alt1">&nbsp;</div><div class="line number55 index54 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// each job on the homepage is clickable and give detailed information</code></div><div class="line number56 index55 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$job</code> <code class="php plain">= </code><code class="php variable">$this</code><code class="php plain">-&gt;getMostRecentProgrammingJob();</code></div><div class="line number57 index56 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$link</code> <code class="php plain">= </code><code class="php variable">$crawler</code><code class="php plain">-&gt;selectLink(</code><code class="php string">'Web Developer'</code><code class="php plain">)-&gt;first()-&gt;link();</code></div><div class="line number58 index57 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;click(</code><code class="php variable">$link</code><code class="php plain">);</code></div><div class="line number59 index58 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php string">'Ens\JobeetBundle\Controller\JobController::showAction'</code><code class="php plain">, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'_controller'</code><code class="php plain">));</code></div><div class="line number60 index59 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php variable">$job</code><code class="php plain">-&gt;getCompanySlug(), </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'company'</code><code class="php plain">));</code></div><div class="line number61 index60 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php variable">$job</code><code class="php plain">-&gt;getLocationSlug(), </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'location'</code><code class="php plain">));</code></div><div class="line number62 index61 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php variable">$job</code><code class="php plain">-&gt;getPositionSlug(), </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'position'</code><code class="php plain">));</code></div><div class="line number63 index62 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php variable">$job</code><code class="php plain">-&gt;getId(), </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'id'</code><code class="php plain">));</code></div><div class="line number64 index63 alt1">&nbsp;</div><div class="line number65 index64 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// a non-existent job forwards the user to a 404</code></div><div class="line number66 index65 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;request(</code><code class="php string">'GET'</code><code class="php plain">, </code><code class="php string">'/job/foo-inc/milano-italy/0/painter'</code><code class="php plain">);</code></div><div class="line number67 index66 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(404 === </code><code class="php variable">$client</code><code class="php plain">-&gt;getResponse()-&gt;getStatusCode());</code></div><div class="line number68 index67 alt1">&nbsp;</div><div class="line number69 index68 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// an expired job page forwards the user to a 404</code></div><div class="line number70 index69 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;request(</code><code class="php string">'GET'</code><code class="php plain">, sprintf(</code><code class="php string">'/job/sensio-labs/paris-france/%d/web-developer'</code><code class="php plain">, </code><code class="php variable">$this</code><code class="php plain">-&gt;getExpiredJob()-&gt;getId()));</code></div><div class="line number71 index70 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(404 === </code><code class="php variable">$client</code><code class="php plain">-&gt;getResponse()-&gt;getStatusCode());</code></div><div class="line number72 index71 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number73 index72 alt2"><code class="php plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>&nbsp;</p>
<div><div id="highlighter_508252" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php comments">// src/Ens/JobeetBundle/Test/Controller/CategoryControllerTest.php</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="php keyword">namespace</code> <code class="php plain">Ens\JobeetBundle\Tests\Controller;</code></div><div class="line number4 index3 alt1"><code class="php keyword">use</code> <code class="php plain">Symfony\Bundle\FrameworkBundle\Test\WebTestCase;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="php keyword">class</code> <code class="php plain">CategoryControllerTest </code><code class="php keyword">extends</code> <code class="php plain">WebTestCase</code></div><div class="line number7 index6 alt2"><code class="php plain">{</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php keyword">public</code> <code class="php keyword">function</code> <code class="php plain">testShow()</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number10 index9 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// get the custom parameters from app config.yml</code></div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$kernel</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createKernel();</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$kernel</code><code class="php plain">-&gt;boot();</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$max_jobs_on_homepage</code> <code class="php plain">= </code><code class="php variable">$kernel</code><code class="php plain">-&gt;getContainer()-&gt;getParameter(</code><code class="php string">'max_jobs_on_homepage'</code><code class="php plain">);</code></div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$max_jobs_on_category</code> <code class="php plain">= </code><code class="php variable">$kernel</code><code class="php plain">-&gt;getContainer()-&gt;getParameter(</code><code class="php string">'max_jobs_on_category'</code><code class="php plain">);</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$client</code> <code class="php plain">= </code><code class="php keyword">static</code><code class="php plain">::createClient();</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// categories on homepage are clickable</code></div><div class="line number19 index18 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;request(</code><code class="php string">'GET'</code><code class="php plain">, </code><code class="php string">'/'</code><code class="php plain">);</code></div><div class="line number20 index19 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$link</code> <code class="php plain">= </code><code class="php variable">$crawler</code><code class="php plain">-&gt;selectLink(</code><code class="php string">'Programming'</code><code class="php plain">)-&gt;link();</code></div><div class="line number21 index20 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;click(</code><code class="php variable">$link</code><code class="php plain">);</code></div><div class="line number22 index21 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php string">'Ens\JobeetBundle\Controller\CategoryController::showAction'</code><code class="php plain">, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'_controller'</code><code class="php plain">));</code></div><div class="line number23 index22 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php string">'programming'</code><code class="php plain">, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'slug'</code><code class="php plain">));</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// categories with more than $max_jobs_on_homepage jobs also have a "more" link</code></div><div class="line number26 index25 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;request(</code><code class="php string">'GET'</code><code class="php plain">, </code><code class="php string">'/'</code><code class="php plain">);</code></div><div class="line number27 index26 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$link</code> <code class="php plain">= </code><code class="php variable">$crawler</code><code class="php plain">-&gt;selectLink(</code><code class="php string">'22'</code><code class="php plain">)-&gt;link();</code></div><div class="line number28 index27 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;click(</code><code class="php variable">$link</code><code class="php plain">);</code></div><div class="line number29 index28 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php string">'Ens\JobeetBundle\Controller\CategoryController::showAction'</code><code class="php plain">, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'_controller'</code><code class="php plain">));</code></div><div class="line number30 index29 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(</code><code class="php string">'programming'</code><code class="php plain">, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'slug'</code><code class="php plain">));</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// only $max_jobs_on_category jobs are listed</code></div><div class="line number33 index32 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertTrue(</code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.jobs tr'</code><code class="php plain">)-&gt;</code><code class="php functions">count</code><code class="php plain">() assertRegExp(</code><code class="php string">'/32 jobs/'</code><code class="php plain">, </code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.pagination_desc'</code><code class="php plain">)-&gt;text());</code></div><div class="line number34 index33 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertRegExp(</code><code class="php string">'/page 1\/2/'</code><code class="php plain">, </code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.pagination_desc'</code><code class="php plain">)-&gt;text());</code></div><div class="line number35 index34 alt2">&nbsp;</div><div class="line number36 index35 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$link</code> <code class="php plain">= </code><code class="php variable">$crawler</code><code class="php plain">-&gt;selectLink(</code><code class="php string">'2'</code><code class="php plain">)-&gt;link();</code></div><div class="line number37 index36 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$crawler</code> <code class="php plain">= </code><code class="php variable">$client</code><code class="php plain">-&gt;click(</code><code class="php variable">$link</code><code class="php plain">);</code></div><div class="line number38 index37 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertEquals(2, </code><code class="php variable">$client</code><code class="php plain">-&gt;getRequest()-&gt;attributes-&gt;get(</code><code class="php string">'page'</code><code class="php plain">));</code></div><div class="line number39 index38 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$this</code><code class="php plain">-&gt;assertRegExp(</code><code class="php string">'/page 2\/2/'</code><code class="php plain">, </code><code class="php variable">$crawler</code><code class="php plain">-&gt;filter(</code><code class="php string">'.pagination_desc'</code><code class="php plain">)-&gt;text());</code></div><div class="line number40 index39 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number41 index40 alt2"><code class="php plain">}</code></div></div></td></tr></tbody></table></div></div>
<p style="float: right;"><a title="Symfony2 Jobeet Day 10: The Forms" href="http://www.ens.ro/2012/05/17/symfony2-jobeet-day-10-the-forms/">Symfony2 Jobeet Day 10: The Forms</a></p>
<p style="float: left;"><a title="Symfony2 Jobeet Day 8: The Unit Tests" href="http://www.ens.ro/2012/04/18/symfony2-jobeet-day-8-the-unit-tests/">Symfony2 Jobeet Day 8: The Unit Tests</a></p>
			</div><!-- .entry-content -->

	<footer class="entry-meta">
		This entry was posted in <a href="http://www.ens.ro/category/english/" title="View all posts in English" rel="category tag">English</a>, <a href="http://www.ens.ro/category/web-development/php/" title="View all posts in PHP" rel="category tag">PHP</a>, <a href="http://www.ens.ro/category/web-development/" title="View all posts in Web Development" rel="category tag">Web Development</a> and tagged <a href="http://www.ens.ro/tag/symfony2-jobeet/" rel="tag">symfony2 jobeet</a> by <a href="http://www.ens.ro/author/dragos/">Dragos Holban</a>. Bookmark the <a href="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/Symfony2 Jobeet Day 9  The Functional Tests   ENS.htm" title="Permalink to Symfony2 Jobeet Day 9: The Functional Tests" rel="bookmark">permalink</a>.		
			</footer><!-- .entry-meta -->
</article><!-- #post-1172 -->

						<div id="comments">
	
	
			<h2 id="comments-title">
			12 thoughts on “<span>Symfony2 Jobeet Day 9: The Functional Tests</span>”		</h2>

		
		<ol class="commentlist">
				<li class="comment even thread-even depth-1" id="li-comment-183">
		<article id="comment-183" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/6feb9d8b11aa448b904a0da7706be2ed" class="avatar avatar-68 photo" height="68" width="68"><span class="fn"><a href="http://rubikintegration.com/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;http://rubikintegration.com&#39;]);" rel="external nofollow" class="url">Vu Nguyen</a></span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-183"><time datetime="2012-04-28T21:44:56+00:00">April 28, 2012 at 9:44 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thank you for the great job, please keep working on this. I really need a complete tut to start with SF2 for my new project</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=183#respond" onclick="return addComment.moveForm(&quot;comment-183&quot;, &quot;183&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li>
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-257">
		<article id="comment-257" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/f0cf119a50adb217a86a0664bc249d1c" class="avatar avatar-68 photo" height="68" width="68"><span class="fn">Markhaen</span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-257"><time datetime="2012-05-06T19:37:15+00:00">May 6, 2012 at 7:37 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Great article series!<br>
Just a note: don’t you think it’s a bad practice to do so much in one test in your last example?</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=257#respond" onclick="return addComment.moveForm(&quot;comment-257&quot;, &quot;257&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-dragos bypostauthor even depth-2" id="li-comment-306">
		<article id="comment-306" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/5aad75a3a109bfbbb1f7eeac6959918b" class="avatar avatar-39 photo" height="39" width="39"><span class="fn">Dragos Holban</span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-306"><time datetime="2012-05-07T09:34:54+00:00">May 7, 2012 at 9:34 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I am not sure how much are you supposed to do in one test. Maybe it will be clearer to move each section in one separate test, like you probably suggest. I am also in the process of learning Symfony 2 while writing this tutorial, so any suggestions are great appreciated.</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=306#respond" onclick="return addComment.moveForm(&quot;comment-306&quot;, &quot;306&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li>
</ul>
</li>
	<li class="comment odd alt thread-even depth-1" id="li-comment-326">
		<article id="comment-326" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/05315fddd5dd003feeb299cfdcaf81d9" class="avatar avatar-68 photo" height="68" width="68"><span class="fn">KS</span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-326"><time datetime="2012-05-09T23:39:21+00:00">May 9, 2012 at 11:39 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thanks for your work on this; I’m new to Symfony2 and it helped a lot.</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=326#respond" onclick="return addComment.moveForm(&quot;comment-326&quot;, &quot;326&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li>
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1463">
		<article id="comment-1463" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/3347d59d132cbe94bfddf676848fbc3a" class="avatar avatar-68 photo" height="68" width="68"><span class="fn"><a href="http://www.threeandme.co.uk/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;http://www.threeandme.co.uk&#39;]);" rel="external nofollow" class="url">Sean Cooper</a></span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-1463"><time datetime="2012-07-29T14:01:17+00:00">July 29, 2012 at 2:01 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I had a couple of problems with this.<br>
Could you confirm that what I now have is correct please.</p>
<p>// only $max_jobs_on_homepage jobs are listed for a category<br>
    $this-&gt;assertTrue($crawler-&gt;filter(‘.category_programming tr’)-&gt;count()==10);<br>
	$this-&gt;assertTrue($crawler-&gt;filter(‘.category_design .more_jobs’)-&gt;count()==0);<br>
    $this-&gt;assertTrue($crawler-&gt;filter(‘.category_programming .more_jobs’)-&gt;count()==1);</p>
<p>filter(‘.category_design .more_jobs’)-&gt;count==0 was failing due to a stray opening div tag in index.html.twig (not sure if that was my mistake).</p>
<p>      <!--stray tag--></p>
<p>Great Tutorials, many thanks</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=1463#respond" onclick="return addComment.moveForm(&quot;comment-1463&quot;, &quot;1463&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-2" id="li-comment-2132">
		<article id="comment-2132" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/de119af0e077d7bf1c135bece8ae1d70" class="avatar avatar-39 photo" height="39" width="39"><span class="fn"><a href="http://gohere.4japan.info/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;http://gohere.4japan.info&#39;]);" rel="external nofollow" class="url">Buskaiwa</a></span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-2132"><time datetime="2012-08-28T09:46:29+00:00">August 28, 2012 at 9:46 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>@Sean,<br>
Yes, I noticed a typo in the code too. It should be</p>
<p>    // only $max_jobs_on_homepage jobs are listed for a category<br>
    $this-&gt;assertTrue($crawler-&gt;filter(‘.category_programming tr’)-&gt;count() == 0);<br>
    $this-&gt;assertTrue($crawler-&gt;filter(‘.category_design .more_jobs’)-&gt;count() == 0);</p>
<p>I tried with a 10 and a 0 which gave outputting 4 and 3 assertions respectively.</p>
<p>I also found a typo in the CategoryControllerTest.php file too. Correct should be</p>
<p>    // only $max_jobs_on_category jobs are listed<br>
    $this-&gt;assertTrue($crawler-&gt;filter(‘.jobs tr’)-&gt;count() == 10);<br>
    $this-&gt;assertRegExp(‘/32 jobs/’, $crawler-&gt;filter(‘.pagination_desc’)-&gt;text());</p>
<p>Although I put in 10.</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=2132#respond" onclick="return addComment.moveForm(&quot;comment-2132&quot;, &quot;2132&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li>
</ul>
</li>
	<li class="comment even thread-even depth-1" id="li-comment-1628">
		<article id="comment-1628" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/ba75f753efe49164efbe717814d25d2e" class="avatar avatar-68 photo" height="68" width="68"><span class="fn">nobody</span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-1628"><time datetime="2012-08-06T13:14:16+00:00">August 6, 2012 at 1:14 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>I guess there is some typos again.</p>
<p>many times (maybe in previous page too )<br>
Bundle/Teste/ -&gt; Bundle/Tests/<br>
Bundle/Test/ -&gt; Bundle/Tests/</p>
<p>i didn’t comment just for that but you mispelled at least once bundle in bunlde but i can’t remember which page (it’s between here and my last comment)</p>
<p>In job tests (original line)  :<br>
(28) add<br>
$query-&gt;setParameter(‘date’, date(‘Y-m-d H:i:s’, time()));<br>
before<br>
$query-&gt;setMaxResults(1);</p>
<p>(48) modify<br>
$this-&gt;assertTrue($crawler-&gt;filter(‘.category_programming tr’)-&gt;count() assertTrue($crawler-&gt;filter(‘.category_design .more_jobs’)-&gt;count() == 0);<br>
    $this-&gt;assertTrue($crawler-&gt;filter(‘.category_programming .more_jobs’)-&gt;count() == 1);<br>
in<br>
$this-&gt;assertTrue($crawler-&gt;filter(‘.category_programming tr’)-&gt;count() assertTrue($crawler-&gt;filter(‘.category_design .more_jobs’)-&gt;count() == 0);<br>
     $this-&gt;assertTrue($crawler-&gt;filter(‘.category_programming .more_jobs’)-&gt;count() == 1);</p>
<p>(70) replace<br>
$crawler = $client-&gt;request(‘GET’, sprintf(‘/job/sensio-labs/paris-france/%d/web-developer’, $this-&gt;getExpiredJob()-&gt;getId()));<br>
by<br>
$crawler = $client-&gt;request(‘GET’, sprintf(‘/job/sensio-labs/paris-france/%d/web-developer-expired’, $this-&gt;getExpiredJob()-&gt;getId()));</p>
<p>In category  tests (original line)  :<br>
(16) maybe you could let<br>
    $crawler = $client-&gt;request(‘GET’, ‘/category/index’);<br>
    $this-&gt;assertEquals(‘Ens\JobeetBundle\Controller\CategoryController::showAction’, $client-&gt;getRequest()-&gt;attributes-&gt;get(‘_controller’));<br>
    $this-&gt;assertFalse(200 === $client-&gt;getResponse()-&gt;getStatusCode());<br>
(NB assertTrue become assertFalse cause it’s aimed to fail)</p>
<p>(33) replace<br>
    $this-&gt;assertTrue($crawler-&gt;filter(‘.jobs tr’)-&gt;count() assertRegExp(‘/32 jobs/’, $crawler-&gt;filter(‘.pagination_desc’)-&gt;text());<br>
    $this-&gt;assertRegExp(‘/page 1\/2/’, $crawler-&gt;filter(‘.pagination_desc’)-&gt;text());<br>
by<br>
    $this-&gt;assertTrue($crawler-&gt;filter(‘.jobs tr’)-&gt;count() assertRegExp(‘/32 jobs/’, $crawler-&gt;filter(‘.pagination_desc’)-&gt;text());<br>
    $this-&gt;assertRegExp(‘/page 1\/2/’, $crawler-&gt;filter(‘.pagination_desc’)-&gt;text());</p>
<p>END</p>
<p>About the question of Markhaen, the best practice could be to have a test function for each user storie imho (moreover if you formalized them).</p>
<p>Goodjob</p>
<p>ps : i guess one of my firsts comments were edited by wp because I said for files you create to have &lt; ? php at their beginnings (it's obvious but it's better to mention it for really really novice).</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=1628#respond" onclick="return addComment.moveForm(&quot;comment-1628&quot;, &quot;1628&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li>
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2440">
		<article id="comment-2440" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/2e3ba5a3d502b1424514fa61140f2fcc" class="avatar avatar-68 photo" height="68" width="68"><span class="fn">George</span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-2440"><time datetime="2012-09-16T03:23:55+00:00">September 16, 2012 at 3:23 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>getMostRecentProgrammingJob() in JobControllerTest.php is being sorted by j.created_at DESC</p>
<p>In JobRepository.php its -&gt;orderBy(‘j.expires_at’, ‘DESC’);</p>
<p>This causes the test to fail because the sort orders are different.  Going by j.expires_at will give the most recent job (consider that one of the use cases requires the ability to extend the length of a posting), so the create date of the oldest job would make the sort effectively not the newest job, but the oldest extended job.</p>
<p>I’ve changed JobControllerTest.php to use j.expires_at, so that the test is checking if the most recently created / updated job is the first entry.</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=2440#respond" onclick="return addComment.moveForm(&quot;comment-2440&quot;, &quot;2440&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li>
	<li class="comment even thread-even depth-1" id="li-comment-11871">
		<article id="comment-11871" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/44cfb0209c7fc8ab4db55bf9be40b95c" class="avatar avatar-68 photo" height="68" width="68"><span class="fn"><a href="http://toporov.org/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;http://toporov.org&#39;]);" rel="external nofollow" class="url">Vasiliy Toporov</a></span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-11871"><time datetime="2012-12-23T19:42:06+00:00">December 23, 2012 at 7:42 pm</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>The reason is why fails the tests from JobControllerTest.php is that css-selectors, chosen for them, do not match elements.</p>
<p>Like (line 50 from JobControllerTest.php):<br>
$this-&gt;assertTrue($crawler-&gt;filter(‘.category_programming tr’)-&gt;count() == 10);<br>
tr from table with class “jobs” are not inside the div with class “category_programming”.</p>
<p>To fix this I added ids to main category divs in Job/index.html.twig.<br>
    {% for category in categories %}</p>
<p>And then, proper tests will look like (from line 49 of JobControllerTest.php):</p>
<p>// only $max_jobs_on_homepage jobs are listed for a category<br>
$this-&gt;assertTrue($crawler-&gt;filter(‘#programming .jobs tr’)-&gt;count() == 10);<br>
$this-&gt;assertTrue($crawler-&gt;filter(‘#design .more_jobs’)-&gt;count() == 0);<br>
$this-&gt;assertTrue($crawler-&gt;filter(‘#programming .more_jobs’)-&gt;count() == 1);</p>
<p>// jobs are sorted by date<br>
$this-&gt;assertTrue($crawler-&gt;filter(‘#programming .jobs tr’)-&gt;first()-&gt;filter(sprintf(‘a[href*="/%d/"]‘, $this-&gt;getMostRecentProgrammingJob()-&gt;getId()))-&gt;count() == 1);</p>
<p>You can find working files in my Bitbucket repo (link are shortened because they are too big):<br>
modyfied view – goo.gl/zBe9i<br>
functional tests – <a href="http://goo.gl/l19Iv" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-comment&#39;,&#39;http://goo.gl&#39;]);" rel="nofollow">http://goo.gl/l19Iv</a></p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=11871#respond" onclick="return addComment.moveForm(&quot;comment-11871&quot;, &quot;11871&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-2" id="li-comment-48962">
		<article id="comment-48962" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/95df868e1686f3960d94f512a39b2821" class="avatar avatar-39 photo" height="39" width="39"><span class="fn">Sabrina</span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-48962"><time datetime="2013-05-18T01:46:37+00:00">May 18, 2013 at 1:46 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thanks so much for the correction! I was scratching my head trying to figure out why the tests kept failing.</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=48962#respond" onclick="return addComment.moveForm(&quot;comment-48962&quot;, &quot;48962&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li>
</ul>
</li>
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-50282">
		<article id="comment-50282" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/9d2e715baab928f5bedb837bfcb70b2b" class="avatar avatar-68 photo" height="68" width="68"><span class="fn">blacksonic</span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-50282"><time datetime="2013-05-26T10:31:25+00:00">May 26, 2013 at 10:31 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Nice tutorial, but You shouldnt put that much assertions pert test. Try to put them into separate more specific tests</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=50282#respond" onclick="return addComment.moveForm(&quot;comment-50282&quot;, &quot;50282&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li>
	<li class="comment odd alt thread-even depth-1" id="li-comment-59382">
		<article id="comment-59382" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt="" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/b10d99a0daf6012badfe80e3ac56ec86" class="avatar avatar-68 photo" height="68" width="68"><span class="fn">Steve</span> on <a href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#comment-59382"><time datetime="2013-07-25T07:26:29+00:00">July 25, 2013 at 7:26 am</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>This tutorial is a fantastic learning tool. I hope that at some point you’ll extend it and do some more with it.</p>
<p>The “Day 9: Functional Tests” portion still seems to have some problems. Following the instructions exactly, I don’t get passing tests. Some lines of code contain syntactic errors. I fixed those and the code still doesn’t pass. I’ve tried some of the solutions from the comments but still don’t have passing tests.</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/?replytocom=59382#respond" onclick="return addComment.moveForm(&quot;comment-59382&quot;, &quot;59382&quot;, &quot;respond&quot;, &quot;1172&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li>
		</ol>

		
		
	
									<div id="respond">
				<h3 id="reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="http://www.ens.ro/2012/04/25/symfony2-jobeet-day-9-the-functional-tests/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.ens.ro/wp-comments-post.php" method="post" id="commentform">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required="true"></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required="true"></p>
<p class="comment-form-url"><label for="url">Website</label><input id="url" name="url" type="text" value="" size="30"></p>
												<p class="comment-form-comment"><label for="comment">Comment</label><textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href="" title=""&gt; &lt;abbr title=""&gt; &lt;acronym title=""&gt; &lt;b&gt; &lt;blockquote cite=""&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=""&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=""&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment">
							<input type="hidden" name="comment_post_ID" value="1172" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="e7e70e10b6"></p>					</form>
							</div><!-- #respond -->
				<script type="text/javascript">
		jQuery(document).ready(function () {
			jQuery('#commentform').submit(function () {
				_gaq.push(
					['_setAccount', 'UA-29990339-1'],
					['_trackEvent', 'comment', 'submit']
				);
			});
		});
	</script>
				
</div><!-- #comments -->

				
			</div><!-- #content -->
		</div><!-- #primary -->


	</div><!-- #main -->

	<footer id="colophon" role="contentinfo">

			

			<div id="site-generator">
								<a href="http://wordpress.org/" title="Semantic Personal Publishing Platform">Proudly powered by WordPress</a>
			</div>
	</footer><!-- #colophon -->
</div><!-- #page -->

<div id="dcssb-slick" class="dc-social-slick vertical right align-top" style="float: none; position: fixed; z-index: 10000; margin-right: -100px; top: 50px;"><div class="tab" style="position: absolute; margin-left: -46px;"><span><img src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/tab_right_vertical.png" alt="Share"></span></div><div id="dc-dcssb" class="dc-social-slick-content" style="height: 210px;">
		<ul id="nav-dcssb" class=""><li id="dcssb-twitter" class="size-box"><iframe id="twitter-widget-0" scrolling="no" frameborder="0" allowtransparency="true" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/tweet_button.1386967771.htm" class="twitter-share-button twitter-tweet-button twitter-count-vertical" title="Twitter Tweet Button" data-twttr-rendered="true" style="width: 59px; height: 62px;"></iframe></li>
			
			<div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_http" frameborder="0" allowtransparency="true" scrolling="no" id="fb_xdm_frame_http" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tab-index="-1" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/xd_arbiter.htm" style="border: none;"></iframe><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tab-index="-1" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/xd_arbiter(1).htm" style="border: none;"></iframe></div></div><script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/all.js" async=""></script><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div>
			
<li id="dcssb-facebook" class="size-box"><fb:like href="http%3A%2F%2Fwww.ens.ro%2F2012%2F04%2F25%2Fsymfony2-jobeet-day-9-the-functional-tests%2F" send="false" layout="box_count" show_faces="false" font="" fb-xfbml-state="rendered" class=" fb_edge_widget_with_comment fb_iframe_widget"><span style="height: 65px; width: 55px;"><iframe id="f1f668fc88" name="f23be55bac" scrolling="no" title="Like this content on Facebook." class="fb_ltr" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/like.htm" style="border: none; overflow: hidden; height: 65px; width: 55px;"></iframe></span></fb:like></li>
			<li id="dcssb-plusone" class="size-box"><div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background-color: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 50px; height: 60px; background-position: initial initial; background-repeat: initial initial;"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 50px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 60px;" tabindex="0" vspace="0" width="100%" id="I0_1387031751241" name="I0_1387031751241" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/fastbutton.htm" data-gapiattached="true" title="+1"></iframe></div></li>
			
				</ul>
		<div class="clear"></div>
		<div class="dc-corner"><span></span></div>
		</div></div>			<script type="text/javascript">_ga.trackFacebook();</script>
			<script type="text/javascript">
				jQuery(window).load(function() {

								
					var config = {
						idWrapper : 'dcssb-slick',
						location: 'right',
						align: 'top',
						offset: '50px',
						speed: 600,
						tabText: '<img src="http://www.ens.ro/wp-content/plugins/slick-social-share-buttons/css/images/tab_right_vertical.png" alt="Share" />',
						autoClose: true,
						loadOpen: false,
						classWrapper: 'dc-social-slick vertical',
						classOpen: 'dcssb-open',
						classClose: 'dcssb-close',
						classToggle: 'dcssb-link'					
					};
					if(!jQuery().dcSocialSlick) {
						jQuery.getScript('http://www.ens.ro/wp-content/plugins/slick-social-share-buttons/js/jquery.social.slick.1.0.js', function(){
							jQuery('#dc-dcssb').dcSocialSlick(config);
						}); 
					} else {
						jQuery('#dc-dcssb').dcSocialSlick(config);
					}

								});
			</script>
		
			<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/shCore.js"></script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/shBrushPhp.js"></script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/shBrushPlain.js"></script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/shBrushXml.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.ens.ro/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.ens.ro/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['tab-size'] = 2;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/jquery.form.min.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var _wpcf7 = {"loaderUrl":"http:\/\/www.ens.ro\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ..."};
/* ]]> */
</script>
<script type="text/javascript" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/scripts.js"></script>


<iframe name="oauth2relay323574873" id="oauth2relay323574873" src="./Symfony2 Jobeet Day 9  The Functional Tests   ENS_files/postmessageRelay.htm" style="width: 1px; height: 1px; position: absolute; top: -100px;"></iframe></body></html>